[project]
name = "marker"
version = "1.0.0"
description = "Fork of marker-pdf: Convert PDF leveraging a section heirarchy, tree-sitter code extraction, and Litellm."
authors = [{ name = "Graham Anderson", email = "graham@grahama.co" }]
requires-python = "~=3.10"
readme = "README.md"
license = "GPL-3.0-or-later"
keywords = [
    "pdf",
    "markdown",
    "ocr",
    "nlp",
    "fork",
]
dependencies = [
    "Pillow>=10.1.0,<11",
    "pydantic>=2.4.2,<3",
    "pydantic-settings>=2.0.3,<3",
    "transformers>=4.45.2,<5",
    "python-dotenv>=1.0.0,<2",
    "torch>=2.5.1,<3",
    "tqdm>=4.66.1,<5",
    "ftfy>=6.1.1,<7",
    "rapidfuzz>=3.8.1,<4",
    "surya-ocr>=0.14.5,<0.15.0",
    "regex>=2024.4.28,<2025",
    "pdftext~=0.6.2",
    "markdownify>=0.13.1,<0.14",
    "click>=8.1.7,<9",
    "markdown2>=2.5.2,<3",
    "filetype>=1.2.0,<2",
    "scikit-learn>=1.6.1,<2",
    "google-genai>=1.0.0,<2",
    "anthropic>=0.46.0,<0.47",
    "pre-commit>=4.2.0,<5",
    "openai>=1.65.2,<2",
    "litellm>=1.67.0,<2",
    "camelot-py>=0.11.0,<0.12",
    "cv2-tools",
    # "cv2-tools>=3.0.2,<4",
    "tree-sitter>=0.23.2",
    "asyncio>=3.4.3,<4",
    "json-repair>=0.44.1",
    "tree-sitter-languages>=1.10.2",
    "tree-sitter-language-pack>=0.7.3",
    "numpy>=1.24.0,<2",
    "loguru>=0.7.0,<0.8",
    # "claude-comms @ {editable=true, path='./comms'}",
    "ghostscript>=0.7",
    "claude-test-reporter @ git+https://github.com/grahama1970/claude-test-reporter.git@main",
    "beautifulsoup4>=4.13.4",
    "lxml>=5.3.0",
    "python-docx>=1.1.2",
    "docx2python>=3.5.0",
    "python-pptx>=1.0.2",
    "defusedxml>=0.7.1",
    "aiohttp>=3.11.18",
    "typer>=0.16.0",
    "python-arango>=8.2.0",
    "redis>=6.2.0",
]

[project.optional-dependencies]
full = [
    "mammoth>=1.9.0,<2",
    "openpyxl>=3.1.5,<4",
    "python-pptx>=1.0.2,<2",
    "ebooklib>=0.18,<0.19",
    "weasyprint~=63.1",
]

[project.urls]
Repository = "https://github.com/grahama1970/marker"
Forked-From = "https://github.com/VikParuchuri/marker"

[project.scripts]
marker-cli = "marker.cli.main:app"
marker_single = "marker.scripts.convert_single:convert_single_cli"
marker_chunk_convert = "marker.scripts.chunk_convert:chunk_convert_cli"
marker_gui = "marker.scripts.run_streamlit_app:streamlit_app_cli"
marker_server = "marker.scripts.server:server_cli"

[dependency-groups]
dev = [
    "jupyter>=1.0.0,<2",
    "datasets>=2.21.0,<3",
    "streamlit>=1.37.1,<2",
    "fastapi>=0.115.4,<0.116",
    "uvicorn>=0.32.0,<0.33",
    "python-multipart>=0.0.16,<0.0.17",
    "pytest>=8.3.3,<9",
    "pytest-mock>=3.14.0,<4",
    "pytest-json-report>=1.5.0,<2",
    "apted==1.0.3",
    "distance==0.1.3",
    "lxml==5.3.0",
    "tabulate>=0.9.0,<0.10",
    "latex2mathml>=3.77.0,<4",
    "playwright>=1.49.1,<2",
]

[tool.hatch.build]
sources = ["src"]

[tool.hatch.build.targets.sdist]
include = [
    "src/marker",
    "src/marker/core/scripts/*.sh",
    "src/marker/core/scripts/*.html",
]

[tool.hatch.build.targets.wheel]
packages = ["src/marker"]
include = [
    "src/marker/core/scripts/*.sh",
    "src/marker/core/scripts/*.html",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
    "filename(name): specify the filename for the pdf_document fixture",
]
filterwarnings = [
    "ignore::Warning",
]
asyncio_mode = "auto"
addopts = """
    -v
    --tb=short
    --strict-markers
    --json-report
    --json-report-file=test-results.json
    --json-report-summary
"""
