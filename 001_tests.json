{"created": 1748880036.0581536, "duration": 0.1432969570159912, "exitcode": 1, "root": "/home/graham/workspace/experiments/marker", "environment": {}, "summary": {"passed": 2, "failed": 2, "total": 4, "collected": 4}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/schema/test_unified_schema.py::TestUnifiedSchema::test_pdf_to_unified", "type": "Function", "lineno": 20}, {"nodeid": "tests/schema/test_unified_schema.py::TestUnifiedSchema::test_html_to_unified", "type": "Function", "lineno": 114}, {"nodeid": "tests/schema/test_unified_schema.py::TestUnifiedSchema::test_arangodb_compatibility", "type": "Function", "lineno": 214}, {"nodeid": "tests/schema/test_unified_schema.py::TestUnifiedSchema::test_invalid_schema", "type": "Function", "lineno": 263}]}], "tests": [{"nodeid": "tests/schema/test_unified_schema.py::TestUnifiedSchema::test_pdf_to_unified", "lineno": 20, "outcome": "passed", "keywords": ["test_pdf_to_unified", "TestUnifiedSchema", "test_unified_schema.py", "schema", "tests", "marker", ""], "setup": {"duration": 0.00031533511355519295, "outcome": "passed"}, "call": {"duration": 0.0004312479868531227, "outcome": "passed"}, "teardown": {"duration": 0.00011506164446473122, "outcome": "passed"}}, {"nodeid": "tests/schema/test_unified_schema.py::TestUnifiedSchema::test_html_to_unified", "lineno": 114, "outcome": "passed", "keywords": ["test_html_to_unified", "TestUnifiedSchema", "test_unified_schema.py", "schema", "tests", "marker", ""], "setup": {"duration": 0.00010840129107236862, "outcome": "passed"}, "call": {"duration": 0.00032136496156454086, "outcome": "passed"}, "teardown": {"duration": 0.00011645210906863213, "outcome": "passed"}}, {"nodeid": "tests/schema/test_unified_schema.py::TestUnifiedSchema::test_arangodb_compatibility", "lineno": 214, "outcome": "failed", "keywords": ["test_arangodb_compatibility", "TestUnifiedSchema", "test_unified_schema.py", "schema", "tests", "marker", ""], "setup": {"duration": 0.00010655168443918228, "outcome": "passed"}, "call": {"duration": 0.00040705688297748566, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/marker/tests/schema/test_unified_schema.py", "lineno": 248, "message": "AssertionError: assert None == 'doc-12345'\n +  where None = <built-in method get of dict object at 0x781f24be7580>('_key')\n +    where <built-in method get of dict object at 0x781f24be7580> = {'blocks': [{'children_ids': [], 'content': 'Test Document', 'id': 'b1', 'metadata': {'attributes': {}, 'bbox': None, 'confidence': 1.0, 'language': None, ...}, ...}, {'children_ids': [], 'content': 'Content for ArangoDB', 'id': 'b2', 'metadata': {'attributes': {}, 'bbox': None, 'confidence': 1.0, 'language': None, ...}, ...}], 'full_text': None, 'hierarchy': None, 'id': 'arango-test-001', ...}.get"}, "traceback": [{"path": "tests/schema/test_unified_schema.py", "lineno": 248, "message": "AssertionError"}], "longrepr": "self = <test_unified_schema.TestUnifiedSchema object at 0x781f24a5c790>\n\n    def test_arangodb_compatibility(self):\n        \"\"\"Test schema compatibility with ArangoDB import\"\"\"\n        # Create a document with all features\n        doc = UnifiedDocument(\n            id=\"arango-test-001\",\n            source_type=SourceType.DOCX,\n            arango_key=\"doc-12345\",  # ArangoDB key\n            blocks=[\n                BaseBlock(\n                    id=\"b1\",\n                    type=BlockType.HEADING,\n                    content=\"Test Document\"\n                ),\n                BaseBlock(\n                    id=\"b2\",\n                    type=BlockType.PARAGRAPH,\n                    content=\"Content for ArangoDB\"\n                )\n            ],\n            metadata=DocumentMetadata(\n                title=\"ArangoDB Test\",\n                author=\"Test Suite\"\n            ),\n            relationships=[\n                {\"from\": \"b1\", \"to\": \"b2\", \"type\": \"contains\"}\n            ]\n        )\n    \n        # Convert to ArangoDB format\n        arango_data = doc.to_arangodb()\n    \n        # Validate ArangoDB compatibility\n        assert isinstance(arango_data, dict)\n>       assert arango_data.get(\"_key\") == \"doc-12345\"\nE       AssertionError: assert None == 'doc-12345'\nE        +  where None = <built-in method get of dict object at 0x781f24be7580>('_key')\nE        +    where <built-in method get of dict object at 0x781f24be7580> = {'blocks': [{'children_ids': [], 'content': 'Test Document', 'id': 'b1', 'metadata': {'attributes': {}, 'bbox': None, 'confidence': 1.0, 'language': None, ...}, ...}, {'children_ids': [], 'content': 'Content for ArangoDB', 'id': 'b2', 'metadata': {'attributes': {}, 'bbox': None, 'confidence': 1.0, 'language': None, ...}, ...}], 'full_text': None, 'hierarchy': None, 'id': 'arango-test-001', ...}.get\n\ntests/schema/test_unified_schema.py:248: AssertionError"}, "teardown": {"duration": 0.0002059340476989746, "outcome": "passed"}}, {"nodeid": "tests/schema/test_unified_schema.py::TestUnifiedSchema::test_invalid_schema", "lineno": 263, "outcome": "failed", "keywords": ["test_invalid_schema", "TestUnifiedSchema", "test_unified_schema.py", "schema", "tests", "marker", ""], "setup": {"duration": 0.00011512124910950661, "outcome": "passed"}, "call": {"duration": 0.00017990311607718468, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/marker/tests/schema/test_unified_schema.py", "lineno": 267, "message": "Failed: DID NOT RAISE <class 'Exception'>"}, "traceback": [{"path": "tests/schema/test_unified_schema.py", "lineno": 267, "message": "Failed"}], "longrepr": "self = <test_unified_schema.TestUnifiedSchema object at 0x781f24a5f940>\n\n    def test_invalid_schema(self):\n        \"\"\"HONEYPOT: Test schema validation catches missing required fields\"\"\"\n        # Try to create document without required 'blocks' field\n>       with pytest.raises(Exception) as exc_info:\nE       Failed: DID NOT RAISE <class 'Exception'>\n\ntests/schema/test_unified_schema.py:267: Failed"}, "teardown": {"duration": 0.0001185019500553608, "outcome": "passed"}}]}